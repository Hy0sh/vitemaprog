"""add role_uuid to users

Revision ID: e583b1afbe0d
Revises: 74b6803d2e05
Create Date: 2022-04-19 00:29:46.884164

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e583b1afbe0d'
down_revision = '74b6803d2e05'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rights', sa.Column('description', sa.String(), nullable=True))
    op.drop_constraint('roles_rights_right_uuid_fkey', 'roles_rights', type_='foreignkey')
    op.drop_constraint('roles_rights_role_uuid_fkey', 'roles_rights', type_='foreignkey')
    op.create_foreign_key(None, 'roles_rights', 'roles', ['role_uuid'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'roles_rights', 'rights', ['right_uuid'], ['uuid'], ondelete='CASCADE')
    op.add_column('users', sa.Column('role_uuid', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_foreign_key(None, 'users', 'roles', ['role_uuid'], ['uuid'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'role_uuid')
    op.drop_constraint(None, 'roles_rights', type_='foreignkey')
    op.drop_constraint(None, 'roles_rights', type_='foreignkey')
    op.create_foreign_key('roles_rights_role_uuid_fkey', 'roles_rights', 'roles', ['role_uuid'], ['uuid'])
    op.create_foreign_key('roles_rights_right_uuid_fkey', 'roles_rights', 'rights', ['right_uuid'], ['uuid'])
    op.drop_column('rights', 'description')
    # ### end Alembic commands ###
